managed implementation in class zbp_rr1_r_loyaltyprogramheader unique;
strict ( 1 );
with draft;
define behavior for ZRR1_R_LoyaltyProgramHeader alias LoyaltyProgramHeader
persistent table zrr1_lytpgmhdr
draft table zrr1_lytpgmhdr_d
lock master
total etag LoyaltyPgmMembershipChngOn
authorization master ( instance )
early numbering
etag master LoyaltyPgmMembershipChngOn
{
  create;
  update;
  delete;
  field ( readonly ) LoyaltyMembershipID;
  field ( readonly : update ) BusinessPartnerID;
  field ( readonly ) LoyaltyPgmPointsAvailable, BusinessPartnerName,LoyaltyPgmPointsRedeemed;
  field ( mandatory : create ) BusinessPartnerID;
  association _LoyaltyPgmTransactions { with draft; create; }
  association _LoyaltyPgmTierDets { with draft; create; }
  mapping for zrr1_lytpgmhdr corresponding
  {
    LoyaltyMembershipID = lytmemid;
    BusinessPartnerID = bpid;
    BusinessPartnerName = bpname;
    LoyaltyPgmMemberSince = memsince;
    LoyaltyPgmPointsAvailable = lytpoints_avl;
    LoyaltyPgmPointsRedeemed = lytpoints_red;
  }
  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;
}

define behavior for ZRR1_R_LoyalPointsMgmTxnDet alias LoyaltyPointsProgTxnDet
persistent table zrr1_lytpgmtxn
draft table zrr1_lytpgmtxn_d
lock dependent by _LoyaltyPgmMembershipHeader
authorization dependent
etag master LocalLastChangedAt
early numbering
{

field ( readonly ) LoyaltyPgmTransChngBy, LoyaltyPgmTransCreatBy;
field ( mandatory ) LoyaltyPgmTransactionDate, LoyaltyPgmTransactionValue, LoyaltyPgmTransactionCurrency, LoyaltyPgmActivityType;

field ( readonly ) LoyaltyPgmMembershipID, LoyaltyPgmTransactionID;
field ( readonly ) LoyaltyPgmPoints;

mapping for zrr1_lytpgmtxn corresponding
{
    LoyaltyPgmMembershipID = lytmemid;
    LoyaltyPgmTransactionID   =  lyttxnid ;
    LoyaltyPgmTransactionDate = lyttxndt;
    LoyaltyPgmTransactionValue = lyttxnval;
    LoyaltyPgmTransactionCurrency = lyttxncur;
    LoyaltyPgmActivityType  = lytacttyp;
    LoyaltyPgmPoints  = lytpoints;
    LoyaltyPgmTransDescription = lyttxndesc;
    LoyaltyPgmTransCreatOn = lyttxncreaton;
    LoyaltyPgmTransCreatBy  = lyttxncreatby;
    LoyaltyPgmTransChngBy  = lyttxnchngby;
    LocalLastChangedAt = local_last_changed_at;
}

  update;
  delete;
  association _LoyaltyPgmMembershipHeader { with draft; }
}

define behavior for ZRR1_R_LoyalPointsProgTierDet alias LoyaltyPointsProgTierDetails
persistent table zrr1_lytpgmtr
draft table zrr1_lytpgmtr_d
lock dependent by _LoyaltyPgmMembershipHeader
authorization dependent
etag master LocalLastChangedAt
{

  field ( mandatory ) LoyaltyTierValidFrom;
  field ( readonly ) LoyaltyMembershipID;

 mapping for zrr1_lytpgmtr
 {
    LoyaltyMembershipID = lytmemid;
    LoyaltyTierID = lyttierid;
    LoyaltyTierValidFrom = lyttiervalidfrom;
    LoyaltyTierStatus = lyttierstatus;
    LoyaltyTierStatusText = lyttierstatustext;
    LoyaltyTierCreatedBy = lytbptiercreatby;
    LoyaltyTierChangedBy = lytbptierchngby;
    LocalLastChangedAt =  local_last_changed_at;
    Tierwfapprovaldueby = tierwfapprovaldueby;
 }

  update;
  delete;

  association _LoyaltyPgmMembershipHeader { with draft; }
}